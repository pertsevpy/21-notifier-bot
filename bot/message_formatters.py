"""–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è Telegram –±–æ—Ç–∞"""

from typing import Dict

from bot.utils import convert_utc_to_local, clean_html, escape_markdown


class MessageFormatters:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞"""

    def __init__(self, config_manager):
        self.config_manager = config_manager

    def format_notification_message(self, notification: Dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        try:
            timezone_str = self.config_manager.config.get(
                "timezone", "Europe/Moscow"
            )
            time_str = convert_utc_to_local(notification["time"], timezone_str)
            message_text = clean_html(notification["message"])

            escaped_time = escape_markdown(time_str)
            escaped_type = escape_markdown(
                notification.get("groupName", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            )
            escaped_message = escape_markdown(message_text)
            escaped_id = escape_markdown(notification["id"])

            formatted_message = (
                f"üîî *–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ* üîî\n"
                f"üìÖ *–í—Ä–µ–º—è:* {escaped_time}\n"
                f"üìã *–¢–∏–ø:* {escaped_type}\n"
                f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:*\n"
                f"{escaped_message}\n"
                f"üÜî *ID:* `{escaped_id}`"
            )

            return formatted_message.strip()

        except Exception as e:
            return (
                f"üîî –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\n\n"
                f"{e}\n"
                f"–í—Ä–µ–º—è: {notification.get('time', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
                f"–¢–∏–ø: {notification.get('groupName', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n\n"
                f"–°–æ–æ–±—â–µ–Ω–∏–µ: {notification.get('message', '')}"
            )

    def format_notification_html(self, notification: Dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ HTML"""
        timezone_str = self.config_manager.config.get(
            "timezone", "Europe/Moscow"
        )
        time_str = convert_utc_to_local(notification["time"], timezone_str)
        message_text = clean_html(notification["message"])

        return (
            f"<b>üîî –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</b>\n"
            f"<b>üìÖ –í—Ä–µ–º—è:</b> {time_str}\n"
            f"<b>üìã –¢–∏–ø:</b> {notification.get('groupName', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"<b>üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n{message_text}\n"
            f"<b>üÜî ID:</b> <code>{notification['id']}</code>"
        )

    def format_notification_plain(self, notification: Dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏"""
        timezone_str = self.config_manager.config.get(
            "timezone", "Europe/Moscow"
        )
        time_str = convert_utc_to_local(notification["time"], timezone_str)
        message_text = clean_html(notification["message"])

        return (
            f"üîî –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\n"
            f"–í—Ä–µ–º—è: {time_str}\n"
            f"–¢–∏–ø: {notification.get('groupName', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
            f"–°–æ–æ–±—â–µ–Ω–∏–µ:\n{message_text}\n"
            f"ID: {notification['id']}"
        )
