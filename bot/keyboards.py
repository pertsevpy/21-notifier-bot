"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è Telegram –±–æ—Ç–∞"""

from typing import List, Dict
from zoneinfo import available_timezones

from telegram import ReplyKeyboardMarkup


class Keyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞"""

    @staticmethod
    def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        keyboard = [
            ["üìä –°—Ç–∞—Ç—É—Å"],
            ["‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫", "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞"],
            ["üîê –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", "üîÑ –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫"],
            ["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "üîî –ü–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"],
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_settings_keyboard() -> ReplyKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        keyboard = [
            ["üë§ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–Ω", "üîë –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å"],
            ["üè´ –í—ã–±—Ä–∞—Ç—å –∫–∞–º–ø—É—Å", "‚è∞ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å"],
            ["‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"],
            ["üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"],
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_campuses_keyboard(campuses: List[Dict]) -> ReplyKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞–º–ø—É—Å–∞–º–∏"""
        keyboard = []
        current_row = []

        for i, campus in enumerate(campuses):
            campus_name = campus["fullName"]
            if len(campus_name) > 30:
                campus_name = campus_name[:27] + "..."

            current_row.append(campus_name)

            if len(current_row) >= 2 or i == len(campuses) - 1:
                keyboard.append(current_row)
                current_row = []

        keyboard.append(["üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"])
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_available_timezones() -> list[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ –†–æ—Å—Å–∏–∏"""
        timezones = [
            "Europe/Kaliningrad",  # UTC+2
            "Europe/Moscow",  # UTC+3
            "Europe/Samara",  # UTC+4
            "Asia/Tashkent",  # UTC+5
            "Asia/Yekaterinburg",  # UTC+5
            "Asia/Omsk",  # UTC+6
            "Asia/Novosibirsk",  # UTC+7
            "Asia/Novokuznetsk",  # UTC+7
            "Asia/Krasnoyarsk",  # UTC+7
            "Asia/Irkutsk",  # UTC+8
            "Asia/Chita",  # UTC+9
            "Asia/Vladivostok",  # UTC+10
            "Asia/Magadan",  # UTC+11
            "Asia/Sakhalin",  # UTC+11
            "Asia/Kamchatka",  # UTC+12
            "Asia/Anadyr",  # UTC+12
        ]
        return [tz for tz in timezones if tz in available_timezones()]

    @staticmethod
    def get_timezone_display_name(timezone: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—è—Å–∞ –¥–ª—è UI"""
        display_names = {
            "Europe/Kaliningrad": "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥ \n(UTC+2)",
            "Europe/Moscow": "–ú–æ—Å–∫–≤–∞ \n(UTC+3)",
            "Europe/Samara": "–°–∞–º–∞—Ä–∞ \n(UTC+4)",
            "Asia/Tashkent": "–¢–∞—à–∫–µ–Ω—Ç \n(UTC+5)",
            "Asia/Yekaterinburg": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ \n(UTC+5)",
            "Asia/Omsk": "–û–º—Å–∫ \n(UTC+6)",
            "Asia/Novosibirsk": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ \n(UTC+7)",
            "Asia/Novokuznetsk": "–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫ \n(UTC+7)",
            "Asia/Krasnoyarsk": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫ \n(UTC+7)",
            "Asia/Irkutsk": "–ò—Ä–∫—É—Ç—Å–∫ \n(UTC+8)",
            "Asia/Chita": "–ß–∏—Ç–∞ \n(UTC+9)",
            "Asia/Vladivostok": "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ \n(UTC+10)",
            "Asia/Magadan": "–ú–∞–≥–∞–¥–∞–Ω \n(UTC+11)",
            "Asia/Sakhalin": "–°–∞—Ö–∞–ª–∏–Ω \n(UTC+11)",
            "Asia/Kamchatka": "–ö–∞–º—á–∞—Ç–∫–∞ \n(UTC+12)",
            "Asia/Anadyr": "–ê–Ω–∞–¥—ã—Ä—å \n(UTC+12)",
        }
        return display_names.get(timezone, timezone)

    @staticmethod
    def get_available_timezones_keyboard() -> ReplyKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏ –†–æ—Å—Å–∏–∏"""
        timezones = Keyboards.get_available_timezones()
        keyboard = [
            [
                Keyboards.get_timezone_display_name(tz)
                for tz in timezones[i : i + 2]
            ]
            for i in range(0, len(timezones), 2)
        ]
        keyboard.append(["üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"])
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
